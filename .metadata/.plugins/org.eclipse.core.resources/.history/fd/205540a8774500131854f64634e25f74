object Problem2 {
  def fib: Stream[Long] = {
    def tail(h: Long, n: Long): Stream[Long] = h #:: tail(n, h + n)
    tail(0, 1)
	}                                         //> fib: => Stream[Long]
	
	fib.toList(100)                           //> java.lang.OutOfMemoryError: Java heap space
                                                  //| 	at java.lang.Long.valueOf(Long.java:557)
                                                  //| 	at scala.runtime.BoxesRunTime.boxToLong(BoxesRunTime.java:74)
                                                  //| 	at Problem2$$anonfun$main$1.Problem2$$anonfun$$tail$1(Problem2.scala:3)
                                                  //| 	at Problem2$$anonfun$main$1$$anonfun$Problem2$$anonfun$$tail$1$1.apply(P
                                                  //| roblem2.scala:3)
                                                  //| 	at Problem2$$anonfun$main$1$$anonfun$Problem2$$anonfun$$tail$1$1.apply(P
                                                  //| roblem2.scala:3)
                                                  //| 	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1085)
                                                  //| 	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1077)
                                                  //| 	at scala.collection.immutable.Stream.foreach(Stream.scala:548)
                                                  //| 	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:
                                                  //| 48)
                                                  //| 	at scala.collection.mutable.ListBuffer.$plus$plus$eq(ListBuffer.scala:17
                                                  //| 6)
                                                  //| 	at scala.collection.mutable.ListBuffer.$plus$plus$eq(ListBuffer.scala:45
                                                  //| )
                                                  //| 	at scala.collection.TraversableLike$class.to(TraversableLike.scala:629)
                                                  //| 	at scala.collecti
                                                  //| Output exceeds cutoff limit.
	
	def makeFibListUntil(n: Int) = {
		
	}
	
	def fibEvenMembersSmallerThan(n: Int) = {
		//makeFibListUntil(n).filter(_ % 2 == 0)
	}
	
	fibEvenMembersSmallerThan(4000000)
	
}