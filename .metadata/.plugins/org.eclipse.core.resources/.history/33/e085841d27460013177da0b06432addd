object Problem9 {
	val limit = (1 to 1000).find(n => n + math.sqrt(n) >= 1000).getOrElse(0)
                                                  //> limit  : Int = 969

	val rs = for(b <- 2 until limit; a <- 1 until b; c = 1000 - a - b
             if a * a + b * b  == c * c) yield a * b * c
                                                  //> rs  : scala.collection.immutable.IndexedSeq[Int] = Vector(31875000)

	val r = rs(1)                             //> java.lang.IndexOutOfBoundsException: 1
                                                  //| 	at scala.collection.immutable.Vector.checkRangeConvert(Vector.scala:137)
                                                  //| 
                                                  //| 	at scala.collection.immutable.Vector.apply(Vector.scala:127)
                                                  //| 	at Problem9$$anonfun$main$1.apply$mcV$sp(Problem9.scala:7)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$$anonfun$$exe
                                                  //| cute$1.apply$mcV$sp(WorksheetSupport.scala:76)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$.redirected(W
                                                  //| orksheetSupport.scala:65)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$.$execute(Wor
                                                  //| ksheetSupport.scala:75)
                                                  //| 	at Problem9$.main(Problem9.scala:1)
                                                  //| 	at Problem9.main(Problem9.scala)

}